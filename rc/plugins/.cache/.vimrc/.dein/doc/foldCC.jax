*foldCC.txt*	折り畳みテキスト'foldtext'をいい感じに表示する関数を提供。

Author  : LeafCage <leafcage+vim @ gmail.com>
License : MIT license  {{{
    Permission is hereby granted, free of charge, to any person obtaining
    a copy of this software and associated documentation files (the
    "Software"), to deal in the Software without restriction, including
    without limitation the rights to use, copy, modify, merge, publish,
    distribute, sublicense, and/or sell copies of the Software, and to
    permit persons to whom the Software is furnished to do so, subject to
    the following conditions:
    The above copyright notice and this permission notice shall be included
    in all copies or substantial portions of the Software.

    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
    OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
    MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
    IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
    CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
    TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
    SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
}}}

==============================================================================
目次						*foldCC-contents*

概要				|foldCC-introduction|
使い方				|foldCC-usage|
インターフェイス		|foldCC-interface|
  変数				  |foldCC-variables|
  関数				  |foldCC-functions|
その他				|foldCC-other|


==============================================================================
概要						*foldCC-introduction*

*foldCC* はいい感じの'foldtext'に使える関数を提供します。
また、現在カーソル位置の折り畳み階層を返す関数もおまけで付属しています。

最新版:
https://github.com/LeafCage/foldCC.vim


==============================================================================
使い方						*foldCC-usage*

vimrc等に以下の設定を記述してください。折り畳みテキストにfoloCCのものが使われ
るようになります。 >
	set foldtext=FoldCCtext()

|FoldCCnavi()|は現在行の折り畳み階層を返します。例えば以下の呼び出しで現在行の
折り畳みステータスを表示します。 >
	:echo foldCCnavi()


==============================================================================
インターフェイス				*foldCC-interface*

------------------------------------------------------------------------------
変数						*foldCC-variables*

g:foldCCtext_maxchars				*g:foldCCtext_maxchars*
	既定値:  78
	|FoldCCtext()|で利用される。
	foldtextが長すぎるときこの値に切り詰める。


g:foldCCtext_head				*g:foldCCtext_head*
	既定値:  'v:folddashes. " "'
	|FoldCCtext()|で利用される。
	foldtext の前方に挿入される内容。
	評価されるので文字列を指定したい場合は '"文字列"' という形などにする。


g:foldCCtext_tail				*g:foldCCtext_tail*
	既定値:  'v:foldend - v:foldstart+1'
	|FoldCCtext()|で利用される。
	foldtext の後方に挿入される内容。
	評価されるので文字列を指定したい場合は '"文字列"' という形などにする。
	以前の既定値を使いたければ、以下のようにする。 >
	  let g:foldCCtext_tail = 'printf("   %s[%4d lines  Lv%-2d]%s",
	  \ v:folddashes, v:foldend-v:foldstart+1, v:foldlevel, v:folddashes)'


g:foldCCtext_enable_autofdc_adjuster	*g:foldCCtext_enable_autofdc_adjuster*
	既定値:  0
	|FoldCCtext()|で利用される。
	有効だと、foldが深いとき、自動で'foldcolumn'の値を調整する


g:foldCCnavi_maxchars				*g:foldCCnavi_maxchars*
	既定値:  60
	|FoldCCnavi()|で利用される。
	表示が長すぎるときこの値の長さに切り詰める。


------------------------------------------------------------------------------
関数						*foldCC-functions*

FoldCCtext()					*FoldCCtext()*
	'foldtext'での利用を想定した関数である。 >
		set foldtext=FoldCCtext()
<	と設定すると、各グローバル変数|g:foldCCtext_maxchars|
	|g:foldCCtext_head||g:foldCCtext_tail|の設定に応じた文字列を返す。
	また、|g:foldCCtext_enable_autofdc_adjuster|を設定すると深い折り畳みが
	存在するテキスト内で'foldcolumn'の値を自動で調整するおまけ機能もある。


FoldCCnavi()					*FoldCCnavi()*
	現在カーソル位置がどの折り畳みの中に含まれているのか、そしてその折り畳
	みはさらにどの折り畳みの中にあるかを調べて親階層から並べた文字列を返す
	。


==============================================================================
その他						*foldCC-other*

foldCC#foldtext() foldCC#navi() は廃止しました。
代わりに|foldCCtext()| |foldCCnavi()|をご利用ください。
なぜそうしたかというと、どうせ初回起動時に設定されるのならわざわざ読み込みの遅
い autoload スクリプトにする意味はないと考えたからです。


==============================================================================
vim:tw=78:ts=8:ft=help:norl:noet:fen:
